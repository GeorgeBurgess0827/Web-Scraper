Abayomi Ogunnusi https://dev.to/drsimplegraffiti/i-scraped-dev-to-using-axios-and-cheerio-26ko
treavers media https://dev.to/drsimplegraffiti/i-scraped-dev-to-using-axios-and-cheerio-26ko
CodewithAniaKubw https://www.youtube.com/watch?v=-3lqUHeZs_0&ab_channel=CodewithAniaKub%C3%B3w

books to scrape https://books.toscrape.com/

jsontostring
axios
cheerio
express


This code is using several libraries, including axios, cheerio, express, and json2csv, to scrape a website for information on books. It starts by defining several constants, including the URL of the website to be scraped, a base URL, a link URL, and arrays to store the data and display of the books. It also defines a variable for the genre of the books.

It then defines two asynchronous functions, getGenre and getBooks. The getGenre function uses the axios and cheerio libraries to make a request to the URL and then parse the HTML to find the genre of the books. The getBooks function uses axios and cheerio again to make a request to the URL and parse the HTML to find the title, link, price, and stock of each book. It also saves this information to a CSV file.

The code then calls the getGenre and getBooks functions and starts an express server to handle requests to the '/' and '/results' routes. The '/results' route returns the book_data array in JSON format.

Web Scraper for Books
This is a web scraper built using Node.js and several libraries, including axios, cheerio, express, and json2csv. It scrapes a website for information on books, including the title, link, price, and stock, and saves this information to a CSV file.

Getting Started
Clone the repository to your local machine
Copy code
git clone https://github.com/your-username/web-scraper-books.git
Install the dependencies
Copy code
npm install
Start the script
Copy code
node index.js
How it works
The script starts by defining several constants, including the URL of the website to be scraped, a base URL, a link URL, and arrays to store the data and display of the books. It also defines a variable for the genre of the books.

It then defines two asynchronous functions, getGenre and getBooks. The getGenre function uses the axios and cheerio libraries to make a request to the URL and then parse the HTML to find the genre of the books. The getBooks function uses axios and cheerio again to make a request to the URL and parse the HTML to find the title, link, price, and stock of each book. It also saves this information to a CSV file.

The code then calls the getGenre and getBooks functions and starts an express server to handle requests to the '/' and '/results' routes. The '/results' route returns the book_data array in JSON format.

Built With
Node.js - JavaScript runtime
axios - Promise based HTTP client for the browser and node.js
cheerio - Fast, flexible, and lean implementation of core jQuery designed specifically for the server.
express - Fast, unopinionated, minimalist web framework for Node.js
json2csv - A library to convert JSON objects to CSV
Authors
Your Name - Initial work - Your GitHub
License
This project is licensed under the MIT License - see the LICENSE.md file for details

Acknowledgments
Hat tip to anyone whose code was used
Inspiration
etc

Acknowledgments
Hat tip to Abayomi Ogunnusi for providing a helpful guide on using axios and cheerio to scrape a website
Treavers Media for providing a helpful guide on using axios and cheerio to scrape a website
CodewithAniaKubw for providing a helpful guide on using axios and cheerio to scrape a website

books to scrape for providing a website with publicly accessible book data for scraping
Note
In order to run this script, you need to change the url to the website you want to scrape. Also, you need to create a .csv file in the root of the project and name it "books.csv"